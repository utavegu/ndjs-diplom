docker-compose -f docker-compose.dev.yml up
(тоже в ридми)

Когда будешь сдавать, сделай ветку prod и там все комментарии и тудусы почисти

Почему токен перестал протухать? Это в постмане что-то изменилось или у меня что-то сломалось?

Если успеешь, переделай авторизацию на сессионную (локал стрэтеджи), шляпа какая-то получилась с JWT. JWT в своем проекте обкатаешь уже без Пасспорта. Тогда и кастомный декоратор роли сможешь подключить.

Также на всё, что приходит с фронта, валидэйшн пайпы, если успеешь

БЭКЛОГ:

И токен при логине похоже всё-таки нужно ретурнить, иначе не взлетит. Но надо будет потестить (когда будет фронтенд)

Везде, где используются енв, использовать конструкцию: process.env.* || 'захардкоженное значение'

Контроллер пользователей временно нужен для теста сервисов пользователей, не забудь удалить.

Разберись уже с дублированием асинк-эвэйтов в контроллерах и сервисах. По идее асинхронное только обращение в базу и значит эта обёртка нужна только в сервисе. (РЕФАКТОР)

Также надо что-то придумать с нэймингом методов контроллера и сервисов - когда они одинаковые, читаемость сильно падает (РЕФАКТОР)

Пабликами метить всё вроде как хороший тон, потому верни везже (РЕФАКТОР)

Слишком много однотипных оберток трай-кэтч

Фильтры и валидаторы - это вот не они ли хэлперс? (пока да, но лучше уточнить этот момент)

Инструкцию к АПИ или даже Сваггер обкатать

Рефактор: директория сетап/конфиг с настройками проекта.

Инструкции по тестированию для вебсокетов и авторизации сюда тоже
Тестируй авторизацию через заголовки - Authorication - Bearer *.*.* (в инструкцию, про второй способ тоже рассказать. Раздел "тестировщикам")

Для тестов в постмане (но потом большую портянку в dump):
{
  "email": "somemail@mail.ru",
  "passwordHash": "A1B54C93D01E442F58",
  "name": "Vasia",
  "contactPhone": "8-922-222-11-34",
  "role": "client"
}

ТЕСТИРОВАНИЕ:
- емэйл занят
- не хватает обязательных полей
- поля заполнены некорректными данными

Почитай по Partial в TS

Аццесс токен, рефреш токен... или уже не тут, а в своем проекте с фронтом. Также в своем проекте не подрубаешь сервис админки монги. Все запросы делаешь через монго шел.

Поиск по TODO

Архитектурный момент - группировать модули по ручкам или по смыслу (Вопрос дипруку). Из плюсов группирования по ручкам - сразу на контроллер весишь "клиент", условно, и дальше только нэйминг ручек. Из плюсов по смыслу - вся логика авторизации, вебсокетов и тд - в одном месте. Меньше межмодульных хитросплетений импортов-экспортов.
Ещё был вопрос откуда рождаются админы в базе
И что-то ещё в тудусах было... А, по JWT-авторизации целый вагон вопросов. Логаут, кукисы и тд. Гарды.
И ЗАДАЙ ЭТИ ВОПРОСЫ ДО КОНЦА ДИПЛОМА, ПРИМЕРНО ЧИСЛА 15! (когда побольше подкопится, после вебсокетов следующей делаешь загрузку файлов, остальное не должно быть сложно)

Документацию к апи сделай просто отдельным файлом md, со Сваггером тут, боюсь, могу не успеть



Краткая инструкция для тестирования websocket-ов через Postman:

    My Workspace
    New
    WebSocket Request
    Raw поменять на Socket.IO
    ws://localhost:ВНЕШНИЙ_ПОРТ_ПРИЛОЖЕНИЯ/
    Connect
    Запонлнить Event Name
    формат JSON
    Пример: { "text": "Сообщение" }
    В Listeners добавить имена событий, которые слушает клиент
    Send

Есть еще протокол wss. Не забывать делать дисконнект, если менялись переменные окружения. Входящие сообщения в постмане только что-то мне не приходят, но в базе данных все как надо меняется. Возможно это связано с тем, что у меня 2 разных события. Хотя если приконнектиться еще и с браузера - все исправно обновляется там, так что все ок вроде.

Как загружать файл или много файлов через постман - тоже инструкцию запили
Для загрузки нескольких файлов с помощью малтера через постман выбираем Post -> Body -> form-data (это малтипарт формдата). В столбце key пишем то, что указано в @UseInterceptors(FilesInterceptor('***')), а в столбце value - выбираем путь до файла. При мульти-загрузке файлов значение key во всех строках будет одно и то же, а в value - разные пути до файла. Если параллельно нужно будет передать body, то эти поля по тому же принципу пишутся в следующих строках. Только это будет малтипарт-формдата, потому... (нюансы работы с ней)

Документация к малтеру
https://github.com/expressjs/multer/blob/master/doc/README-ru.md

Тут не надо, но в своем проекте пригодится:
https://www.npmjs.com/package/sharp

На сколько правильно то, что у меня в хэлперах

Вообще мне нравится не типизировать ручки контроллера, как по мне - дублирующий код. Но следует уточнить по этой теме. То, что у меня сервис интерфейс наследует - уже более чем достаточно, по моему.